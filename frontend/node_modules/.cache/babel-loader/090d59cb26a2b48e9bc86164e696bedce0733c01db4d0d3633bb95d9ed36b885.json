{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\smartdoc3\\\\frontend\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nconst initialState = {\n  sessionId: null,\n  messages: [],\n  currentDocument: null,\n  isLoading: false,\n  error: null,\n  feedback: [],\n  sessionTitle: null,\n  sessionHistory: []\n};\nfunction chatReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SESSION':\n      return {\n        ...state,\n        sessionId: action.payload\n      };\n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case 'SET_MESSAGES':\n      return {\n        ...state,\n        messages: action.payload\n      };\n    case 'SET_CURRENT_DOCUMENT':\n      return {\n        ...state,\n        currentDocument: action.payload\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'ADD_FEEDBACK':\n      return {\n        ...state,\n        feedback: [...state.feedback, action.payload]\n      };\n    case 'CLEAR_CHAT':\n      return {\n        ...state,\n        messages: [],\n        sessionId: null,\n        sessionTitle: null\n      };\n    case 'SET_SESSION_TITLE':\n      return {\n        ...state,\n        sessionTitle: action.payload\n      };\n    case 'LOAD_SESSION':\n      return {\n        ...state,\n        sessionId: action.payload.sessionId,\n        messages: action.payload.messages,\n        sessionTitle: action.payload.title\n      };\n    default:\n      return state;\n  }\n}\nexport function ChatProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(chatReducer, initialState);\n\n  // Generate session ID on mount\n  useEffect(() => {\n    if (!state.sessionId) {\n      const sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      dispatch({\n        type: 'SET_SESSION',\n        payload: sessionId\n      });\n    }\n  }, [state.sessionId]);\n  const value = {\n    ...state,\n    dispatch,\n    addMessage: message => dispatch({\n      type: 'ADD_MESSAGE',\n      payload: message\n    }),\n    setMessages: messages => dispatch({\n      type: 'SET_MESSAGES',\n      payload: messages\n    }),\n    setCurrentDocument: document => dispatch({\n      type: 'SET_CURRENT_DOCUMENT',\n      payload: document\n    }),\n    setLoading: loading => dispatch({\n      type: 'SET_LOADING',\n      payload: loading\n    }),\n    setError: error => dispatch({\n      type: 'SET_ERROR',\n      payload: error\n    }),\n    addFeedback: feedback => dispatch({\n      type: 'ADD_FEEDBACK',\n      payload: feedback\n    }),\n    clearChat: () => dispatch({\n      type: 'CLEAR_CHAT'\n    }),\n    setSessionTitle: title => dispatch({\n      type: 'SET_SESSION_TITLE',\n      payload: title\n    }),\n    loadSession: sessionData => dispatch({\n      type: 'LOAD_SESSION',\n      payload: sessionData\n    }),\n    startNewSession: () => {\n      const newSessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      dispatch({\n        type: 'CLEAR_CHAT'\n      });\n      dispatch({\n        type: 'SET_SESSION',\n        payload: newSessionId\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ChatProvider;\nexport function useChat() {\n  _s2();\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n}\n_s2(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","ChatContext","initialState","sessionId","messages","currentDocument","isLoading","error","feedback","sessionTitle","sessionHistory","chatReducer","state","action","type","payload","title","ChatProvider","children","_s","dispatch","Date","now","Math","random","toString","substr","value","addMessage","message","setMessages","setCurrentDocument","document","setLoading","loading","setError","addFeedback","clearChat","setSessionTitle","loadSession","sessionData","startNewSession","newSessionId","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChat","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/DELL/smartdoc3/frontend/src/context/ChatContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nconst ChatContext = createContext();\n\nconst initialState = {\n  sessionId: null,\n  messages: [],\n  currentDocument: null,\n  isLoading: false,\n  error: null,\n  feedback: [],\n  sessionTitle: null,\n  sessionHistory: [],\n};\n\nfunction chatReducer(state, action) {\n  switch (action.type) {\n    case 'SET_SESSION':\n      return {\n        ...state,\n        sessionId: action.payload,\n      };\n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n    case 'SET_MESSAGES':\n      return {\n        ...state,\n        messages: action.payload,\n      };\n    case 'SET_CURRENT_DOCUMENT':\n      return {\n        ...state,\n        currentDocument: action.payload,\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case 'ADD_FEEDBACK':\n      return {\n        ...state,\n        feedback: [...state.feedback, action.payload],\n      };\n    case 'CLEAR_CHAT':\n      return {\n        ...state,\n        messages: [],\n        sessionId: null,\n        sessionTitle: null,\n      };\n    case 'SET_SESSION_TITLE':\n      return {\n        ...state,\n        sessionTitle: action.payload,\n      };\n    case 'LOAD_SESSION':\n      return {\n        ...state,\n        sessionId: action.payload.sessionId,\n        messages: action.payload.messages,\n        sessionTitle: action.payload.title,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function ChatProvider({ children }) {\n  const [state, dispatch] = useReducer(chatReducer, initialState);\n\n  // Generate session ID on mount\n  useEffect(() => {\n    if (!state.sessionId) {\n      const sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      dispatch({ type: 'SET_SESSION', payload: sessionId });\n    }\n  }, [state.sessionId]);\n\n  const value = {\n    ...state,\n    dispatch,\n    addMessage: (message) => dispatch({ type: 'ADD_MESSAGE', payload: message }),\n    setMessages: (messages) => dispatch({ type: 'SET_MESSAGES', payload: messages }),\n    setCurrentDocument: (document) => dispatch({ type: 'SET_CURRENT_DOCUMENT', payload: document }),\n    setLoading: (loading) => dispatch({ type: 'SET_LOADING', payload: loading }),\n    setError: (error) => dispatch({ type: 'SET_ERROR', payload: error }),\n    addFeedback: (feedback) => dispatch({ type: 'ADD_FEEDBACK', payload: feedback }),\n    clearChat: () => dispatch({ type: 'CLEAR_CHAT' }),\n    setSessionTitle: (title) => dispatch({ type: 'SET_SESSION_TITLE', payload: title }),\n    loadSession: (sessionData) => dispatch({ type: 'LOAD_SESSION', payload: sessionData }),\n    startNewSession: () => {\n      const newSessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      dispatch({ type: 'CLEAR_CHAT' });\n      dispatch({ type: 'SET_SESSION', payload: newSessionId });\n    },\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n}\n\nexport function useChat() {\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}