{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\smartdoc3\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useRef } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    try {\n      const stored = localStorage.getItem('user');\n      return stored ? JSON.parse(stored) : null;\n    } catch {\n      return null;\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const initialized = useRef(false);\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = (() => {\n        try {\n          return JSON.parse(localStorage.getItem('user'));\n        } catch {\n          return null;\n        }\n      })();\n      if (storedUser) {\n        setUser(storedUser);\n      }\n      if (storedToken) {\n        try {\n          const userData = await authService.verifyToken(storedToken);\n          setUser(userData);\n          setToken(storedToken);\n          localStorage.setItem('user', JSON.stringify(userData));\n        } catch (_error) {\n          // Dev-friendly: keep existing stored user/token even if verify fails (e.g., backend restarted)\n          setToken(storedToken);\n        }\n      }\n      setLoading(false);\n    };\n    if (initialized.current) return;\n    initialized.current = true;\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      console.log('Login response:', response);\n      const newToken = response.access_token || response.token;\n      const userData = response.user;\n      console.log('Extracted token:', newToken);\n      console.log('Extracted user:', userData);\n      if (newToken) {\n        localStorage.setItem('token', newToken);\n        setToken(newToken);\n        console.log('Token stored in localStorage');\n      }\n      setUser(userData);\n      try {\n        localStorage.setItem('user', JSON.stringify(userData));\n      } catch {}\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      return {\n        success: true,\n        message: response.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const canAccess = requiredRoles => {\n    if (!user) return false;\n    if (Array.isArray(requiredRoles)) {\n      return requiredRoles.includes(user.role);\n    }\n    return user.role === requiredRoles;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    hasRole,\n    canAccess\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"T/Dolfq8uV8uxckt+JscsbYRhcA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useRef","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","stored","localStorage","getItem","JSON","parse","loading","setLoading","token","setToken","initialized","initAuth","storedToken","storedUser","userData","verifyToken","setItem","stringify","_error","current","login","email","password","response","console","log","newToken","access_token","success","error","_error$response","_error$response$data","data","message","register","_error$response2","_error$response2$data","logout","removeItem","isAuthenticated","hasRole","role","canAccess","requiredRoles","Array","isArray","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/smartdoc3/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\r\nimport { authService } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      const stored = localStorage.getItem('user');\r\n      return stored ? JSON.parse(stored) : null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const initialized = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      const storedUser = (() => {\r\n        try { return JSON.parse(localStorage.getItem('user')); } catch { return null; }\r\n      })();\r\n      if (storedUser) {\r\n        setUser(storedUser);\r\n      }\r\n      if (storedToken) {\r\n        try {\r\n          const userData = await authService.verifyToken(storedToken);\r\n          setUser(userData);\r\n          setToken(storedToken);\r\n          localStorage.setItem('user', JSON.stringify(userData));\r\n        } catch (_error) {\r\n          // Dev-friendly: keep existing stored user/token even if verify fails (e.g., backend restarted)\r\n          setToken(storedToken);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    if (initialized.current) return;\r\n    initialized.current = true;\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      console.log('Login response:', response);\r\n      const newToken = response.access_token || response.token;\r\n      const userData = response.user;\r\n      \r\n      console.log('Extracted token:', newToken);\r\n      console.log('Extracted user:', userData);\r\n      \r\n      if (newToken) {\r\n        localStorage.setItem('token', newToken);\r\n        setToken(newToken);\r\n        console.log('Token stored in localStorage');\r\n      }\r\n      setUser(userData);\r\n      try { localStorage.setItem('user', JSON.stringify(userData)); } catch {}\r\n      \r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.message || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      return { success: true, message: response.message };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.message || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!token && !!user;\r\n  };\r\n\r\n  const hasRole = (role) => {\r\n    return user && user.role === role;\r\n  };\r\n\r\n  const canAccess = (requiredRoles) => {\r\n    if (!user) return false;\r\n    if (Array.isArray(requiredRoles)) {\r\n      return requiredRoles.includes(user.role);\r\n    }\r\n    return user.role === requiredRoles;\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    hasRole,\r\n    canAccess,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}